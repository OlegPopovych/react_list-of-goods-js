{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ALPHABETICALLY","App","useState","sortParam","setSortParam","isReversed","setIsReversed","reparedGoods","goods","prepareGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","classes","onClick","map","good","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"yPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAA4B,iBA2BrBC,EAAM,WACjB,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BiB,SAACC,EAAD,GAAuC,IAA7BL,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,WACtCI,EAAY,YAAOD,GAqBzB,OAnBIL,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAaM,UAGRN,EAMcO,CACnBlB,EACA,CAAEK,YAAWE,eAGf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,kBAAMhB,EAAaJ,IAP9B,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAP9B,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,kBAAMd,GAAeD,IAPhC,sBAYEF,GAAaE,IAEX,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAc,GACdF,EAAa,OALjB,sBAeN,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBC,wBC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fbfc41a3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport classes from 'classnames';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\n\nconst getPreparedGoods = (goods, { sortParam, isReversed }) => {\n  const prepareGoods = [...goods];\n\n  if (sortParam) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortParam) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n};\n\nexport const App = () => {\n  const [sortParam, setSortParam] = useState(null);\n  const [isReversed, setIsReversed] = useState(false);\n  const reparedGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortParam, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classes(\n            'button',\n            'is-info',\n            { 'is-light': sortParam !== SORT_FIELD_ALPHABETICALLY },\n          )}\n          onClick={() => setSortParam(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classes(\n            'button',\n            'is-success',\n            { 'is-light': sortParam !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortParam(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classes(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortParam || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortParam(null);\n              }\n              }\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {reparedGoods.map(good => (\n          <li data-cy=\"Good\" key={uuidv4()}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}